// lib/domain/models/habit.dart

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:hive/hive.dart';
import 'package:uuid/uuid.dart';

part 'habit.g.dart'; // This part file is generated by the build_runner

// To use Hive, you need to add @HiveType and @HiveField annotations to your model.
// This requires the `hive_generator` and `build_runner` packages.
@HiveType(typeId: 0)
class Habit extends HiveObject {
  @HiveField(0)
  final String? id;
  @HiveField(1)
  final String userId;
  @HiveField(2)
  final String name;
  @HiveField(3)
  final String frequency; // E.g., 'Daily', 'Weekly'
  @HiveField(4)
  final List<DateTime> completedDates;
  @HiveField(5) // New field for the start date
  final DateTime startDate;

  Habit({
    String? id,
    required this.userId,
    required this.name,
    required this.frequency,
    List<DateTime>? completedDates,
    required this.startDate, // New field in the constructor
  }) : id = id ?? const Uuid().v4(),
       completedDates = completedDates ?? [];

  // Factory constructor to create a Habit from a Firestore document.
  factory Habit.fromFirestore(DocumentSnapshot doc) {
    Map data = doc.data() as Map;
    return Habit(
      id: doc.id,
      userId: data['userId'] ?? '',
      name: data['name'] ?? '',
      frequency: data['frequency'] ?? '',
      completedDates:
          (data['completedDates'] as List<dynamic>?)
              ?.map((date) => (date as Timestamp).toDate())
              .toList() ??
          [],
      startDate: (data['startDate'] as Timestamp).toDate(),
    );
  }

  // Method to convert the Habit object to a Firestore map.
  Map<String, dynamic> toFirestore() {
    return {
      'userId': userId,
      'name': name,
      'frequency': frequency,
      'completedDates': completedDates,
      'startDate': startDate,
    };
  }

  Habit copyWith({
    String? id,
    String? userId,
    String? name,
    String? frequency,
    List<DateTime>? completedDates,
    DateTime? startDate,
  }) {
    return Habit(
      id: id ?? this.id,
      userId: userId ?? this.userId,
      name: name ?? this.name,
      frequency: frequency ?? this.frequency,
      completedDates: completedDates ?? this.completedDates,
      startDate: startDate ?? this.startDate,
    );
  }
}
